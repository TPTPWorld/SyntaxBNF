// Generated from ANTLRGrammar/TPTP.g4 by ANTLR 4.13.2
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,108,718,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,
2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,
7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,
2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,
34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,
7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,
48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,
2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,
63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,
77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,7,84,
2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,7,91,2,
92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,2,98,7,98,2,99,
7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,7,103,2,104,7,104,2,105,7,
105,2,106,7,106,2,107,7,107,2,108,7,108,2,109,7,109,2,110,7,110,2,111,7,
111,2,112,7,112,2,113,7,113,2,114,7,114,2,115,7,115,2,116,7,116,1,0,1,0,
1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,
1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,9,
1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,
1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,18,1,18,1,18,1,19,1,19,1,20,1,20,1,
21,1,21,1,21,1,22,1,22,1,22,1,22,1,23,1,23,1,24,1,24,1,24,1,24,1,25,1,25,
1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,28,1,29,1,29,1,30,1,30,1,30,1,
31,1,31,1,31,1,32,1,32,1,32,1,33,1,33,1,34,1,34,1,34,1,34,1,35,1,35,1,35,
1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,
40,1,40,1,40,1,41,1,41,1,41,1,42,1,42,1,43,1,43,1,43,1,44,1,44,1,44,1,45,
1,45,1,45,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,49,1,
49,1,49,1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,
1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,
51,1,52,1,52,1,52,1,52,1,52,1,52,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,
1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,55,1,55,1,55,1,55,1,55,1,
55,1,55,1,55,1,55,1,56,1,56,1,56,1,56,1,56,1,56,1,57,1,57,1,57,1,57,1,57,
1,57,1,58,1,58,1,58,1,58,1,58,1,58,1,59,1,59,1,59,1,59,1,59,1,59,1,60,1,
60,1,60,1,60,1,60,1,60,1,61,4,61,483,8,61,11,61,12,61,484,1,61,1,61,1,62,
1,62,5,62,491,8,62,10,62,12,62,494,9,62,1,62,1,62,1,63,1,63,1,63,1,63,5,
63,502,8,63,10,63,12,63,505,9,63,1,63,1,63,1,63,1,63,1,63,1,64,1,64,1,64,
5,64,515,8,64,10,64,12,64,518,9,64,1,64,1,64,1,65,1,65,1,65,1,66,1,66,5,
66,527,8,66,10,66,12,66,530,9,66,1,66,1,66,1,67,1,67,5,67,536,8,67,10,67,
12,67,539,9,67,1,68,1,68,1,68,5,68,544,8,68,10,68,12,68,547,9,68,1,69,1,
69,5,69,551,8,69,10,69,12,69,554,9,69,1,70,1,70,5,70,558,8,70,10,70,12,70,
561,9,70,1,71,1,71,3,71,565,8,71,1,72,1,72,1,72,1,73,1,73,3,73,572,8,73,
1,74,1,74,3,74,576,8,74,1,74,1,74,1,74,1,75,1,75,1,75,1,75,1,76,1,76,3,76,
587,8,76,1,77,1,77,1,77,1,78,1,78,3,78,594,8,78,1,79,1,79,1,79,1,80,1,80,
1,80,1,80,1,81,1,81,3,81,605,8,81,1,82,1,82,1,82,1,83,1,83,3,83,612,8,83,
1,84,1,84,5,84,616,8,84,10,84,12,84,619,9,84,1,85,1,85,5,85,623,8,85,10,
85,12,85,626,9,85,1,86,1,86,1,87,1,87,1,88,1,88,1,89,1,89,1,90,1,90,1,91,
1,91,1,92,1,92,1,93,1,93,1,94,5,94,645,8,94,10,94,12,94,648,9,94,1,94,1,
94,1,94,1,94,5,94,654,8,94,10,94,12,94,657,9,94,1,95,1,95,1,96,1,96,1,97,
1,97,1,97,3,97,666,8,97,1,98,1,98,1,99,1,99,1,100,1,100,1,100,1,100,1,100,
3,100,677,8,100,1,101,1,101,1,102,1,102,1,103,1,103,1,104,1,104,1,105,1,
105,1,105,1,106,1,106,1,107,1,107,1,108,1,108,1,109,1,109,1,110,1,110,1,
111,1,111,1,112,1,112,3,112,704,8,112,1,113,1,113,1,113,1,113,3,113,710,
8,113,1,114,1,114,1,115,1,115,1,116,1,116,1,116,1,503,0,117,1,1,3,2,5,3,
7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,
17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,
29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,
41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,
53,107,54,109,55,111,56,113,57,115,58,117,59,119,60,121,61,123,62,125,63,
127,64,129,65,131,66,133,67,135,68,137,69,139,70,141,71,143,72,145,73,147,
74,149,75,151,76,153,77,155,78,157,79,159,80,161,81,163,82,165,83,167,84,
169,85,171,86,173,87,175,88,177,89,179,90,181,91,183,92,185,93,187,94,189,
95,191,96,193,97,195,0,197,98,199,99,201,0,203,0,205,100,207,0,209,101,211,
102,213,103,215,0,217,0,219,0,221,0,223,104,225,105,227,0,229,106,231,107,
233,108,1,0,22,3,0,9,10,13,13,32,32,2,0,10,10,13,13,1,0,124,124,1,0,42,42,
2,0,42,42,47,47,1,0,37,37,1,0,34,34,3,0,32,33,35,91,93,126,2,0,34,34,92,
92,1,0,96,96,3,0,32,38,40,91,93,126,2,0,43,43,45,45,1,0,46,46,2,0,69,69,
101,101,1,0,47,47,1,0,48,48,1,0,49,57,1,0,48,57,1,0,97,122,1,0,65,90,1,0,
95,95,1,0,36,36,735,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,
1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,
0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,
0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,
43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,
0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,
1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,
0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,
0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,
99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,
1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,
0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,
0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,
0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,
0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,0,157,1,0,0,0,0,159,1,0,0,0,0,
161,1,0,0,0,0,163,1,0,0,0,0,165,1,0,0,0,0,167,1,0,0,0,0,169,1,0,0,0,0,171,
1,0,0,0,0,173,1,0,0,0,0,175,1,0,0,0,0,177,1,0,0,0,0,179,1,0,0,0,0,181,1,
0,0,0,0,183,1,0,0,0,0,185,1,0,0,0,0,187,1,0,0,0,0,189,1,0,0,0,0,191,1,0,
0,0,0,193,1,0,0,0,0,197,1,0,0,0,0,199,1,0,0,0,0,205,1,0,0,0,0,209,1,0,0,
0,0,211,1,0,0,0,0,213,1,0,0,0,0,223,1,0,0,0,0,225,1,0,0,0,0,229,1,0,0,0,
0,231,1,0,0,0,0,233,1,0,0,0,1,235,1,0,0,0,3,240,1,0,0,0,5,242,1,0,0,0,7,
245,1,0,0,0,9,250,1,0,0,0,11,255,1,0,0,0,13,260,1,0,0,0,15,265,1,0,0,0,17,
270,1,0,0,0,19,272,1,0,0,0,21,274,1,0,0,0,23,276,1,0,0,0,25,278,1,0,0,0,
27,280,1,0,0,0,29,282,1,0,0,0,31,284,1,0,0,0,33,286,1,0,0,0,35,292,1,0,0,
0,37,295,1,0,0,0,39,298,1,0,0,0,41,300,1,0,0,0,43,302,1,0,0,0,45,305,1,0,
0,0,47,309,1,0,0,0,49,311,1,0,0,0,51,315,1,0,0,0,53,319,1,0,0,0,55,321,1,
0,0,0,57,323,1,0,0,0,59,326,1,0,0,0,61,328,1,0,0,0,63,331,1,0,0,0,65,334,
1,0,0,0,67,337,1,0,0,0,69,339,1,0,0,0,71,343,1,0,0,0,73,346,1,0,0,0,75,349,
1,0,0,0,77,353,1,0,0,0,79,356,1,0,0,0,81,360,1,0,0,0,83,363,1,0,0,0,85,366,
1,0,0,0,87,368,1,0,0,0,89,371,1,0,0,0,91,374,1,0,0,0,93,377,1,0,0,0,95,381,
1,0,0,0,97,385,1,0,0,0,99,388,1,0,0,0,101,396,1,0,0,0,103,407,1,0,0,0,105,
419,1,0,0,0,107,425,1,0,0,0,109,433,1,0,0,0,111,442,1,0,0,0,113,451,1,0,
0,0,115,457,1,0,0,0,117,463,1,0,0,0,119,469,1,0,0,0,121,475,1,0,0,0,123,
482,1,0,0,0,125,488,1,0,0,0,127,497,1,0,0,0,129,511,1,0,0,0,131,521,1,0,
0,0,133,524,1,0,0,0,135,533,1,0,0,0,137,540,1,0,0,0,139,548,1,0,0,0,141,
555,1,0,0,0,143,564,1,0,0,0,145,566,1,0,0,0,147,571,1,0,0,0,149,575,1,0,
0,0,151,580,1,0,0,0,153,586,1,0,0,0,155,588,1,0,0,0,157,593,1,0,0,0,159,
595,1,0,0,0,161,598,1,0,0,0,163,604,1,0,0,0,165,606,1,0,0,0,167,611,1,0,
0,0,169,613,1,0,0,0,171,620,1,0,0,0,173,627,1,0,0,0,175,629,1,0,0,0,177,
631,1,0,0,0,179,633,1,0,0,0,181,635,1,0,0,0,183,637,1,0,0,0,185,639,1,0,
0,0,187,641,1,0,0,0,189,646,1,0,0,0,191,658,1,0,0,0,193,660,1,0,0,0,195,
665,1,0,0,0,197,667,1,0,0,0,199,669,1,0,0,0,201,676,1,0,0,0,203,678,1,0,
0,0,205,680,1,0,0,0,207,682,1,0,0,0,209,684,1,0,0,0,211,686,1,0,0,0,213,
689,1,0,0,0,215,691,1,0,0,0,217,693,1,0,0,0,219,695,1,0,0,0,221,697,1,0,
0,0,223,699,1,0,0,0,225,703,1,0,0,0,227,709,1,0,0,0,229,711,1,0,0,0,231,
713,1,0,0,0,233,715,1,0,0,0,235,236,5,116,0,0,236,237,5,112,0,0,237,238,
5,105,0,0,238,239,5,40,0,0,239,2,1,0,0,0,240,241,5,44,0,0,241,4,1,0,0,0,
242,243,5,41,0,0,243,244,5,46,0,0,244,6,1,0,0,0,245,246,5,116,0,0,246,247,
5,104,0,0,247,248,5,102,0,0,248,249,5,40,0,0,249,8,1,0,0,0,250,251,5,116,
0,0,251,252,5,102,0,0,252,253,5,102,0,0,253,254,5,40,0,0,254,10,1,0,0,0,
255,256,5,116,0,0,256,257,5,99,0,0,257,258,5,102,0,0,258,259,5,40,0,0,259,
12,1,0,0,0,260,261,5,102,0,0,261,262,5,111,0,0,262,263,5,102,0,0,263,264,
5,40,0,0,264,14,1,0,0,0,265,266,5,99,0,0,266,267,5,110,0,0,267,268,5,102,
0,0,268,269,5,40,0,0,269,16,1,0,0,0,270,271,5,45,0,0,271,18,1,0,0,0,272,
273,5,38,0,0,273,20,1,0,0,0,274,275,5,64,0,0,275,22,1,0,0,0,276,277,5,40,
0,0,277,24,1,0,0,0,278,279,5,41,0,0,279,26,1,0,0,0,280,281,5,91,0,0,281,
28,1,0,0,0,282,283,5,93,0,0,283,30,1,0,0,0,284,285,5,58,0,0,285,32,1,0,0,
0,286,287,5,36,0,0,287,288,5,108,0,0,288,289,5,101,0,0,289,290,5,116,0,0,
290,291,5,40,0,0,291,34,1,0,0,0,292,293,5,91,0,0,293,294,5,93,0,0,294,36,
1,0,0,0,295,296,5,33,0,0,296,297,5,62,0,0,297,38,1,0,0,0,298,299,5,123,0,
0,299,40,1,0,0,0,300,301,5,125,0,0,301,42,1,0,0,0,302,303,5,41,0,0,303,304,
5,125,0,0,304,44,1,0,0,0,305,306,5,91,0,0,306,307,5,46,0,0,307,308,5,93,
0,0,308,46,1,0,0,0,309,310,5,46,0,0,310,48,1,0,0,0,311,312,5,123,0,0,312,
313,5,46,0,0,313,314,5,125,0,0,314,50,1,0,0,0,315,316,5,40,0,0,316,317,5,
46,0,0,317,318,5,41,0,0,318,52,1,0,0,0,319,320,5,33,0,0,320,54,1,0,0,0,321,
322,5,126,0,0,322,56,1,0,0,0,323,324,5,63,0,0,324,325,5,42,0,0,325,58,1,
0,0,0,326,327,5,94,0,0,327,60,1,0,0,0,328,329,5,64,0,0,329,330,5,43,0,0,
330,62,1,0,0,0,331,332,5,64,0,0,332,333,5,45,0,0,333,64,1,0,0,0,334,335,
5,60,0,0,335,336,5,60,0,0,336,66,1,0,0,0,337,338,5,63,0,0,338,68,1,0,0,0,
339,340,5,60,0,0,340,341,5,61,0,0,341,342,5,62,0,0,342,70,1,0,0,0,343,344,
5,61,0,0,344,345,5,62,0,0,345,72,1,0,0,0,346,347,5,60,0,0,347,348,5,61,0,
0,348,74,1,0,0,0,349,350,5,60,0,0,350,351,5,126,0,0,351,352,5,62,0,0,352,
76,1,0,0,0,353,354,5,126,0,0,354,355,5,38,0,0,355,78,1,0,0,0,356,357,5,45,
0,0,357,358,5,45,0,0,358,359,5,62,0,0,359,80,1,0,0,0,360,361,5,58,0,0,361,
362,5,61,0,0,362,82,1,0,0,0,363,364,5,61,0,0,364,365,5,61,0,0,365,84,1,0,
0,0,366,367,5,61,0,0,367,86,1,0,0,0,368,369,5,33,0,0,369,370,5,61,0,0,370,
88,1,0,0,0,371,372,5,33,0,0,372,373,5,33,0,0,373,90,1,0,0,0,374,375,5,63,
0,0,375,376,5,63,0,0,376,92,1,0,0,0,377,378,5,64,0,0,378,379,5,64,0,0,379,
380,5,43,0,0,380,94,1,0,0,0,381,382,5,64,0,0,382,383,5,64,0,0,383,384,5,
45,0,0,384,96,1,0,0,0,385,386,5,64,0,0,386,387,5,61,0,0,387,98,1,0,0,0,388,
389,5,117,0,0,389,390,5,110,0,0,390,391,5,107,0,0,391,392,5,110,0,0,392,
393,5,111,0,0,393,394,5,119,0,0,394,395,5,110,0,0,395,100,1,0,0,0,396,397,
5,105,0,0,397,398,5,110,0,0,398,399,5,102,0,0,399,400,5,101,0,0,400,401,
5,114,0,0,401,402,5,101,0,0,402,403,5,110,0,0,403,404,5,99,0,0,404,405,5,
101,0,0,405,406,5,40,0,0,406,102,1,0,0,0,407,408,5,105,0,0,408,409,5,110,
0,0,409,410,5,116,0,0,410,411,5,114,0,0,411,412,5,111,0,0,412,413,5,100,
0,0,413,414,5,117,0,0,414,415,5,99,0,0,415,416,5,101,0,0,416,417,5,100,0,
0,417,418,5,40,0,0,418,104,1,0,0,0,419,420,5,102,0,0,420,421,5,105,0,0,421,
422,5,108,0,0,422,423,5,101,0,0,423,424,5,40,0,0,424,106,1,0,0,0,425,426,
5,116,0,0,426,427,5,104,0,0,427,428,5,101,0,0,428,429,5,111,0,0,429,430,
5,114,0,0,430,431,5,121,0,0,431,432,5,40,0,0,432,108,1,0,0,0,433,434,5,99,
0,0,434,435,5,114,0,0,435,436,5,101,0,0,436,437,5,97,0,0,437,438,5,116,0,
0,438,439,5,111,0,0,439,440,5,114,0,0,440,441,5,40,0,0,441,110,1,0,0,0,442,
443,5,105,0,0,443,444,5,110,0,0,444,445,5,99,0,0,445,446,5,108,0,0,446,447,
5,117,0,0,447,448,5,100,0,0,448,449,5,101,0,0,449,450,5,40,0,0,450,112,1,
0,0,0,451,452,5,36,0,0,452,453,5,116,0,0,453,454,5,104,0,0,454,455,5,102,
0,0,455,456,5,40,0,0,456,114,1,0,0,0,457,458,5,36,0,0,458,459,5,116,0,0,
459,460,5,102,0,0,460,461,5,102,0,0,461,462,5,40,0,0,462,116,1,0,0,0,463,
464,5,36,0,0,464,465,5,102,0,0,465,466,5,111,0,0,466,467,5,102,0,0,467,468,
5,40,0,0,468,118,1,0,0,0,469,470,5,36,0,0,470,471,5,99,0,0,471,472,5,110,
0,0,472,473,5,102,0,0,473,474,5,40,0,0,474,120,1,0,0,0,475,476,5,36,0,0,
476,477,5,102,0,0,477,478,5,111,0,0,478,479,5,116,0,0,479,480,5,40,0,0,480,
122,1,0,0,0,481,483,7,0,0,0,482,481,1,0,0,0,483,484,1,0,0,0,484,482,1,0,
0,0,484,485,1,0,0,0,485,486,1,0,0,0,486,487,6,61,0,0,487,124,1,0,0,0,488,
492,5,37,0,0,489,491,8,1,0,0,490,489,1,0,0,0,491,494,1,0,0,0,492,490,1,0,
0,0,492,493,1,0,0,0,493,495,1,0,0,0,494,492,1,0,0,0,495,496,6,62,0,0,496,
126,1,0,0,0,497,498,5,47,0,0,498,499,5,42,0,0,499,503,1,0,0,0,500,502,9,
0,0,0,501,500,1,0,0,0,502,505,1,0,0,0,503,504,1,0,0,0,503,501,1,0,0,0,504,
506,1,0,0,0,505,503,1,0,0,0,506,507,5,42,0,0,507,508,5,47,0,0,508,509,1,
0,0,0,509,510,6,63,0,0,510,128,1,0,0,0,511,512,3,197,98,0,512,516,3,201,
100,0,513,515,3,201,100,0,514,513,1,0,0,0,515,518,1,0,0,0,516,514,1,0,0,
0,516,517,1,0,0,0,517,519,1,0,0,0,518,516,1,0,0,0,519,520,3,197,98,0,520,
130,1,0,0,0,521,522,3,199,99,0,522,523,3,139,69,0,523,132,1,0,0,0,524,528,
3,193,96,0,525,527,3,195,97,0,526,525,1,0,0,0,527,530,1,0,0,0,528,526,1,
0,0,0,528,529,1,0,0,0,529,531,1,0,0,0,530,528,1,0,0,0,531,532,3,193,96,0,
532,134,1,0,0,0,533,537,3,229,114,0,534,536,3,227,113,0,535,534,1,0,0,0,
536,539,1,0,0,0,537,535,1,0,0,0,537,538,1,0,0,0,538,136,1,0,0,0,539,537,
1,0,0,0,540,541,3,229,114,0,541,545,3,229,114,0,542,544,3,227,113,0,543,
542,1,0,0,0,544,547,1,0,0,0,545,543,1,0,0,0,545,546,1,0,0,0,546,138,1,0,
0,0,547,545,1,0,0,0,548,552,3,221,110,0,549,551,3,227,113,0,550,549,1,0,
0,0,551,554,1,0,0,0,552,550,1,0,0,0,552,553,1,0,0,0,553,140,1,0,0,0,554,
552,1,0,0,0,555,559,3,219,109,0,556,558,3,227,113,0,557,556,1,0,0,0,558,
561,1,0,0,0,559,557,1,0,0,0,559,560,1,0,0,0,560,142,1,0,0,0,561,559,1,0,
0,0,562,565,3,145,72,0,563,565,3,147,73,0,564,562,1,0,0,0,564,563,1,0,0,
0,565,144,1,0,0,0,566,567,3,203,101,0,567,568,3,147,73,0,568,146,1,0,0,0,
569,572,3,151,75,0,570,572,3,149,74,0,571,569,1,0,0,0,571,570,1,0,0,0,572,
148,1,0,0,0,573,576,3,171,85,0,574,576,3,151,75,0,575,573,1,0,0,0,575,574,
1,0,0,0,576,577,1,0,0,0,577,578,3,207,103,0,578,579,3,153,76,0,579,150,1,
0,0,0,580,581,3,167,83,0,581,582,3,205,102,0,582,583,3,171,85,0,583,152,
1,0,0,0,584,587,3,155,77,0,585,587,3,171,85,0,586,584,1,0,0,0,586,585,1,
0,0,0,587,154,1,0,0,0,588,589,3,203,101,0,589,590,3,171,85,0,590,156,1,0,
0,0,591,594,3,159,79,0,592,594,3,161,80,0,593,591,1,0,0,0,593,592,1,0,0,
0,594,158,1,0,0,0,595,596,3,203,101,0,596,597,3,161,80,0,597,160,1,0,0,0,
598,599,3,167,83,0,599,600,3,173,86,0,600,601,3,169,84,0,601,162,1,0,0,0,
602,605,3,165,82,0,603,605,3,167,83,0,604,602,1,0,0,0,604,603,1,0,0,0,605,
164,1,0,0,0,606,607,3,203,101,0,607,608,3,167,83,0,608,166,1,0,0,0,609,612,
3,213,106,0,610,612,3,169,84,0,611,609,1,0,0,0,611,610,1,0,0,0,612,168,1,
0,0,0,613,617,3,215,107,0,614,616,3,217,108,0,615,614,1,0,0,0,616,619,1,
0,0,0,617,615,1,0,0,0,617,618,1,0,0,0,618,170,1,0,0,0,619,617,1,0,0,0,620,
624,3,217,108,0,621,623,3,217,108,0,622,621,1,0,0,0,623,626,1,0,0,0,624,
622,1,0,0,0,624,625,1,0,0,0,625,172,1,0,0,0,626,624,1,0,0,0,627,628,3,209,
104,0,628,174,1,0,0,0,629,630,3,211,105,0,630,176,1,0,0,0,631,632,7,2,0,
0,632,178,1,0,0,0,633,634,7,3,0,0,634,180,1,0,0,0,635,636,5,43,0,0,636,182,
1,0,0,0,637,638,5,62,0,0,638,184,1,0,0,0,639,640,5,60,0,0,640,186,1,0,0,
0,641,642,5,35,0,0,642,188,1,0,0,0,643,645,8,3,0,0,644,643,1,0,0,0,645,648,
1,0,0,0,646,644,1,0,0,0,646,647,1,0,0,0,647,649,1,0,0,0,648,646,1,0,0,0,
649,650,5,42,0,0,650,651,5,42,0,0,651,655,1,0,0,0,652,654,8,4,0,0,653,652,
1,0,0,0,654,657,1,0,0,0,655,653,1,0,0,0,655,656,1,0,0,0,656,190,1,0,0,0,
657,655,1,0,0,0,658,659,7,5,0,0,659,192,1,0,0,0,660,661,7,6,0,0,661,194,
1,0,0,0,662,666,7,7,0,0,663,664,5,92,0,0,664,666,7,8,0,0,665,662,1,0,0,0,
665,663,1,0,0,0,666,196,1,0,0,0,667,668,5,39,0,0,668,198,1,0,0,0,669,670,
7,9,0,0,670,200,1,0,0,0,671,677,7,10,0,0,672,673,5,92,0,0,673,677,5,92,0,
0,674,675,5,92,0,0,675,677,5,39,0,0,676,671,1,0,0,0,676,672,1,0,0,0,676,
674,1,0,0,0,677,202,1,0,0,0,678,679,7,11,0,0,679,204,1,0,0,0,680,681,7,12,
0,0,681,206,1,0,0,0,682,683,7,13,0,0,683,208,1,0,0,0,684,685,7,14,0,0,685,
210,1,0,0,0,686,687,5,92,0,0,687,688,5,92,0,0,688,212,1,0,0,0,689,690,7,
15,0,0,690,214,1,0,0,0,691,692,7,16,0,0,692,216,1,0,0,0,693,694,7,17,0,0,
694,218,1,0,0,0,695,696,7,18,0,0,696,220,1,0,0,0,697,698,7,19,0,0,698,222,
1,0,0,0,699,700,7,20,0,0,700,224,1,0,0,0,701,704,3,219,109,0,702,704,3,221,
110,0,703,701,1,0,0,0,703,702,1,0,0,0,704,226,1,0,0,0,705,710,3,219,109,
0,706,710,3,221,110,0,707,710,3,217,108,0,708,710,5,95,0,0,709,705,1,0,0,
0,709,706,1,0,0,0,709,707,1,0,0,0,709,708,1,0,0,0,710,228,1,0,0,0,711,712,
7,21,0,0,712,230,1,0,0,0,713,714,9,0,0,0,714,232,1,0,0,0,715,716,5,46,0,
0,716,717,5,10,0,0,717,234,1,0,0,0,25,0,484,492,503,516,528,537,545,552,
559,564,571,575,586,593,604,611,617,624,646,655,665,676,703,709,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class TPTPLexer extends antlr4.Lexer {

    static grammarFileName = "TPTP.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'tpi('", "','", "').'", "'thf('", "'tff('", 
                         "'tcf('", "'fof('", "'cnf('", "'-'", "'&'", "'@'", 
                         "'('", "')'", "'['", "']'", "':'", "'$let('", "'[]'", 
                         "'!>'", "'{'", "'}'", "')}'", "'[.]'", "'.'", "'{.}'", 
                         "'(.)'", "'!'", "'~'", "'?*'", "'^'", "'@+'", "'@-'", 
                         "'<<'", "'?'", "'<=>'", "'=>'", "'<='", "'<~>'", 
                         "'~&'", "'-->'", "':='", "'=='", "'='", "'!='", 
                         "'!!'", "'??'", "'@@+'", "'@@-'", "'@='", "'unknown'", 
                         "'inference('", "'introduced('", "'file('", "'theory('", 
                         "'creator('", "'include('", "'$thf('", "'$tff('", 
                         "'$fof('", "'$cnf('", "'$fot('", null, null, null, 
                         null, null, null, null, null, null, null, null, 
                         null, null, null, null, null, null, null, null, 
                         null, null, null, null, null, null, null, null, 
                         null, null, "'+'", "'>'", "'<'", "'#'", null, null, 
                         null, "'''", null, null, null, "'\\\\'", null, 
                         null, null, null, null, "'.\\n'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, "WS", "Comment_line", 
                          "Comment_block", "Single_quoted", "Back_quoted", 
                          "Distinct_object", "Dollar_word", "Dollar_dollar_word", 
                          "Upper_word", "Lower_word", "Real", "Signed_real", 
                          "Unsigned_real", "Decimal_exponent", "Decimal_fraction", 
                          "Exp_integer", "Signed_exp_integer", "Rational", 
                          "Signed_rational", "Unsigned_rational", "Integer", 
                          "Signed_integer", "Unsigned_integer", "Positive_integer", 
                          "Integer_digits", "Slash", "Slosh", "Vline", "Star", 
                          "Plus", "Arrow", "Less_sign", "Hash", "Not_star_slash", 
                          "Percentage_sign", "Double_quote", "Single_quote", 
                          "Back_quote", "Dot", "Slash_char", "Slosh_char", 
                          "Zero_numeric", "Underscore", "Alpha", "Dollar", 
                          "Printable_char", "Viewable_char" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "T__14", "T__15", "T__16", "T__17", "T__18", 
                      "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
                      "T__25", "T__26", "T__27", "T__28", "T__29", "T__30", 
                      "T__31", "T__32", "T__33", "T__34", "T__35", "T__36", 
                      "T__37", "T__38", "T__39", "T__40", "T__41", "T__42", 
                      "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
                      "T__49", "T__50", "T__51", "T__52", "T__53", "T__54", 
                      "T__55", "T__56", "T__57", "T__58", "T__59", "T__60", 
                      "WS", "Comment_line", "Comment_block", "Single_quoted", 
                      "Back_quoted", "Distinct_object", "Dollar_word", "Dollar_dollar_word", 
                      "Upper_word", "Lower_word", "Real", "Signed_real", 
                      "Unsigned_real", "Decimal_exponent", "Decimal_fraction", 
                      "Exp_integer", "Signed_exp_integer", "Rational", "Signed_rational", 
                      "Unsigned_rational", "Integer", "Signed_integer", 
                      "Unsigned_integer", "Positive_integer", "Integer_digits", 
                      "Slash", "Slosh", "Vline", "Star", "Plus", "Arrow", 
                      "Less_sign", "Hash", "Not_star_slash", "Percentage_sign", 
                      "Double_quote", "Do_char", "Single_quote", "Back_quote", 
                      "Sq_char", "Sign", "Dot", "Exponent", "Slash_char", 
                      "Slosh_char", "Zero_numeric", "Non_zero_numeric", 
                      "Numeric", "Lower_alpha", "Upper_alpha", "Underscore", 
                      "Alpha", "Alpha_numeric", "Dollar", "Printable_char", 
                      "Viewable_char" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

TPTPLexer.EOF = antlr4.Token.EOF;
TPTPLexer.T__0 = 1;
TPTPLexer.T__1 = 2;
TPTPLexer.T__2 = 3;
TPTPLexer.T__3 = 4;
TPTPLexer.T__4 = 5;
TPTPLexer.T__5 = 6;
TPTPLexer.T__6 = 7;
TPTPLexer.T__7 = 8;
TPTPLexer.T__8 = 9;
TPTPLexer.T__9 = 10;
TPTPLexer.T__10 = 11;
TPTPLexer.T__11 = 12;
TPTPLexer.T__12 = 13;
TPTPLexer.T__13 = 14;
TPTPLexer.T__14 = 15;
TPTPLexer.T__15 = 16;
TPTPLexer.T__16 = 17;
TPTPLexer.T__17 = 18;
TPTPLexer.T__18 = 19;
TPTPLexer.T__19 = 20;
TPTPLexer.T__20 = 21;
TPTPLexer.T__21 = 22;
TPTPLexer.T__22 = 23;
TPTPLexer.T__23 = 24;
TPTPLexer.T__24 = 25;
TPTPLexer.T__25 = 26;
TPTPLexer.T__26 = 27;
TPTPLexer.T__27 = 28;
TPTPLexer.T__28 = 29;
TPTPLexer.T__29 = 30;
TPTPLexer.T__30 = 31;
TPTPLexer.T__31 = 32;
TPTPLexer.T__32 = 33;
TPTPLexer.T__33 = 34;
TPTPLexer.T__34 = 35;
TPTPLexer.T__35 = 36;
TPTPLexer.T__36 = 37;
TPTPLexer.T__37 = 38;
TPTPLexer.T__38 = 39;
TPTPLexer.T__39 = 40;
TPTPLexer.T__40 = 41;
TPTPLexer.T__41 = 42;
TPTPLexer.T__42 = 43;
TPTPLexer.T__43 = 44;
TPTPLexer.T__44 = 45;
TPTPLexer.T__45 = 46;
TPTPLexer.T__46 = 47;
TPTPLexer.T__47 = 48;
TPTPLexer.T__48 = 49;
TPTPLexer.T__49 = 50;
TPTPLexer.T__50 = 51;
TPTPLexer.T__51 = 52;
TPTPLexer.T__52 = 53;
TPTPLexer.T__53 = 54;
TPTPLexer.T__54 = 55;
TPTPLexer.T__55 = 56;
TPTPLexer.T__56 = 57;
TPTPLexer.T__57 = 58;
TPTPLexer.T__58 = 59;
TPTPLexer.T__59 = 60;
TPTPLexer.T__60 = 61;
TPTPLexer.WS = 62;
TPTPLexer.Comment_line = 63;
TPTPLexer.Comment_block = 64;
TPTPLexer.Single_quoted = 65;
TPTPLexer.Back_quoted = 66;
TPTPLexer.Distinct_object = 67;
TPTPLexer.Dollar_word = 68;
TPTPLexer.Dollar_dollar_word = 69;
TPTPLexer.Upper_word = 70;
TPTPLexer.Lower_word = 71;
TPTPLexer.Real = 72;
TPTPLexer.Signed_real = 73;
TPTPLexer.Unsigned_real = 74;
TPTPLexer.Decimal_exponent = 75;
TPTPLexer.Decimal_fraction = 76;
TPTPLexer.Exp_integer = 77;
TPTPLexer.Signed_exp_integer = 78;
TPTPLexer.Rational = 79;
TPTPLexer.Signed_rational = 80;
TPTPLexer.Unsigned_rational = 81;
TPTPLexer.Integer = 82;
TPTPLexer.Signed_integer = 83;
TPTPLexer.Unsigned_integer = 84;
TPTPLexer.Positive_integer = 85;
TPTPLexer.Integer_digits = 86;
TPTPLexer.Slash = 87;
TPTPLexer.Slosh = 88;
TPTPLexer.Vline = 89;
TPTPLexer.Star = 90;
TPTPLexer.Plus = 91;
TPTPLexer.Arrow = 92;
TPTPLexer.Less_sign = 93;
TPTPLexer.Hash = 94;
TPTPLexer.Not_star_slash = 95;
TPTPLexer.Percentage_sign = 96;
TPTPLexer.Double_quote = 97;
TPTPLexer.Single_quote = 98;
TPTPLexer.Back_quote = 99;
TPTPLexer.Dot = 100;
TPTPLexer.Slash_char = 101;
TPTPLexer.Slosh_char = 102;
TPTPLexer.Zero_numeric = 103;
TPTPLexer.Underscore = 104;
TPTPLexer.Alpha = 105;
TPTPLexer.Dollar = 106;
TPTPLexer.Printable_char = 107;
TPTPLexer.Viewable_char = 108;



